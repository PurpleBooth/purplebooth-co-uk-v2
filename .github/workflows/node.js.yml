# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

env:
  NODE_VERSION: 16.x
  NETLIFY_SITE_ID: "48139038-b4f3-4992-b6a9-9ee5f75fae5b"
  NETLIFY_AUTH_TOKEN: fake

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout repository
        with:
          lfs: true
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm install
        name: Install dependencies
      - name: Pack assets
        run: tar --exclude='./.git' -cf assets.tar .
      - uses: actions/upload-artifact@v2
        name: Save assets
        with:
          name: installed-artifact
          path: assets.tar
          retention-days: 1
  build:
    name: Create production build
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        name: Download assets
        with:
          name: installed-artifact
          path: .
      - name: Unpack assets
        run: tar -xf assets.tar .
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm run build
        name: Build site
        env:
          NODE_ENV: production
      - name: Pack built assets
        run: tar -uf assets.tar .

      - uses: actions/upload-artifact@v2
        name: Save built assets
        with:
          name: built-artifact
          path: assets.tar
          retention-days: 1

  lint:
    name: Lint code
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/download-artifact@v2
        name: Download assets
        with:
          name: installed-artifact
          path: .
      - run: tar -xf assets.tar
        name: Unpack assets
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm run lint
  style:
    name: Check coing style
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/download-artifact@v2
        name: Download assets
        with:
          name: installed-artifact
          path: .
      - run: tar -xf assets.tar
        name: Unpack assets
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npx prettier -c services/ components/ pages/ styles/
  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/download-artifact@v2
        name: Download assets
        with:
          name: installed-artifact
          path: .
      - run: tar -xf assets.tar
        name: Unpack assets
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm run test

  e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/download-artifact@v2
        name: Download assets
        with:
          name: installed-artifact
          path: .
      - run: tar -xf assets.tar
        name: Unpack assets
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-test-results
          path: test-results/

  deploy:
    name: Deploy site
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - test
      - style
      - e2e
      - lint
      - build
    steps:
      - uses: actions/download-artifact@v2
        name: Download assets
        with:
          name: built-artifact
          path: .
      - run: tar -xf assets.tar
        name: Unpack assets
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Deploy to netlify
        run: npx -p netlify-cli netlify deploy --prod --build
        env:
          NODE_ENV: production
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Smoke Test
        run: curl --fail https://purplebooth.co.uk -vvv

