# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

env:
  NODE_VERSION: 16.x

on:
  push:
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - run: yarn install
      - name: Tar files
        run: tar -cf post-install.tar .
      - uses: actions/upload-artifact@v2
        with:
          name: installed-artifact
          path: post-install.tar
  build:
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: installed-artifact
          path: .
      - name: Unpack assets
        run: tar -xf post-install.tar .
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - run: yarn run build
        env:
          NODE_ENV: production
      - name: Tar files
        run: tar -cf post-build.tar .

      - uses: actions/upload-artifact@v2
        with:
          name: built-artifact
          path: post-build.tar

  lint:
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: installed-artifact
          path: .
      - run: tar -xf post-install.tar
        name: Unpack assets
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - run: yarn run lint
  style:
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: installed-artifact
          path: .
      - run: tar -xf post-install.tar
        name: Unpack assets
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - run: yarn dlx prettier -c services/ components/ pages/ styles/
  test:
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: installed-artifact
          path: .
      - run: tar -xf post-install.tar
        name: Unpack assets
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - run: yarn run test

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - test
      - style
      - lint
      - build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: built-artifact
          path: .
      - run: tar -xf post-build.tar
        name: Unpack assets
      - name: Deploy to netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --prod
          secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'
