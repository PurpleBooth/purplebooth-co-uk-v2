
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
}

server {
    listen       80;
    server_name  localhost;
    server_tokens off;

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log  main;

    location / {
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Xss-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'none'; script-src 'self' 'sha256-N6VbmxPlg001d5gdjorH0+FmhZvteoL+vkB67ARafbM=' 'sha256-nP0EI9B9ad8IoFUti2q7EQBabcE5MS5v0nkvRfUbYnM=' static.medium.com www.google-analytics.com speakerdeck.com; style-src 'self'; frame-src api.medium.com speakerdeck.com www.flickr.com www.youtube.com fast.wistia.com; img-src 'self' i.creativecommons.org www.google-analytics.com; font-src 'self'; upgrade-insecure-requests; report-uri https://purplebooth.report-uri.io/r/default/csp/enforce" always;

        if ($http_x_forwarded_proto = "http") {
          return 301 https://$host$request_uri;
        }

        expires $expires;
        add_header Pragma public;
        add_header Cache-Control "public";


        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /status {
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Xss-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src none; report-uri https://purplebooth.report-uri.io/r/default/csp/enforce" always;

        stub_status;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
