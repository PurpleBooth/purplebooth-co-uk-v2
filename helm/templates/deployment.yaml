apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: "{{ template "fullname" . }}"
  labels:
    app: "{{ template "fullname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.replicaCount.start }}
  template:
    metadata:
      labels:
        app: "{{ template "fullname" . }}"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - "{{ template "fullname" . }}"
              topologyKey: kubernetes.io/hostname
      containers:
      - name: "{{ .Chart.Name }}"
        image: "{{ .Values.image.nginx.repository }}:{{ .Values.image.nginx.tag }}"
        imagePullPolicy: "{{ .Values.image.nginx.pullPolicy }}"
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.nginx.internalPort }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.nginx.internalPort }}
        ports:
        - containerPort: {{ .Values.service.nginx.internalPort }}
          protocol: TCP
        resources:
{{ toYaml .Values.resources.nginx | indent 12 }}
      - name: "{{ .Chart.Name }}-newrelic"
        image: "{{ .Values.image.newRelic.repository }}:{{ .Values.image.newRelic.tag }}"
        imagePullPolicy: "{{ .Values.image.newRelic.pullPolicy }}"
        env:
          - name: NEW_RELIC_APP_NAME
            value: "{{ .Values.newRelic.appName }}"
          - name: NEW_RELIC_LICENSE_KEY
            value: "{{ .Values.newRelic.licenseKey }}"
          - name: NGINX_STATUS_URL
            value: "http://{{ .Chart.Name }}:{{ .Values.service.nginx.internalPort }}/status"
        resources:
{{ toYaml .Values.resources.newRelic | indent 12 }}
